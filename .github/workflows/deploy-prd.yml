# This is a basic workflow to help you get started with Actions

name: INNERGRIM CMS PRD DEPLOY

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: |
          CI=false
          pnpm run build:prod

      - name: Build Docker image
        run: docker build -t innergrim-cms:latest -f .docker/Dockerfile .

      - name: Save Docker image to a tar file
        run: docker save innergrim-cms:latest > innergrim-cms.tar

      - name: Upload Docker image tar as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: innergrim-cms.tar

      - name: Deploy to EC2
        run: |
          # Save the SSH key to a temporary file
          echo "${{ secrets.PRD_AWS_EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

          scp -o StrictHostKeyChecking=no -i /tmp/id_rsa innergrim-cms.tar ec2-user@${{ secrets.PRD_AWS_EC2_HOST }}:/home/ec2-user
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ec2-user@${{ secrets.PRD_AWS_EC2_HOST }} << 'EOF' 

          docker load < /home/ec2-user/innergrim-cms.tar
          ls -l /home/ec2-user/innergrim-cms.tar

          docker rmi -f innergrim-cms || true
          docker load < /home/ec2-user/innergrim-cms.tar
          docker stop innergrim-cms || true
          docker rm innergrim-cms || true
          docker run -d --name innergrim-cms --network service-network -p 3000:3000 \
            -e "SPRING_PROFILES_ACTIVE=dev" \
            -e "AWS_ACCESS_KEY_ID=${{ secrets.PRD_AWS_ACCESS_KEY }}" \
            -e "AWS_SECRET_ACCESS_KEY=${{ secrets.PRD_AWS_ACCESS_SECRET }}" \
            -e "AWS_REGION=${{ secrets.AWS_REGION }}" \
            innergrim-cms:latest
          EOF
